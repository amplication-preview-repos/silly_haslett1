/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { InformationPostaleWhereUniqueInput } from "../../informationPostale/base/InformationPostaleWhereUniqueInput";
import { SalarieListRelationFilter } from "../../salarie/base/SalarieListRelationFilter";

@InputType()
class AdresseWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  debutValidite?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  finValidite?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => InformationPostaleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => InformationPostaleWhereUniqueInput)
  @IsOptional()
  @Field(() => InformationPostaleWhereUniqueInput, {
    nullable: true,
  })
  informationPostale?: InformationPostaleWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SalarieListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SalarieListRelationFilter)
  @IsOptional()
  @Field(() => SalarieListRelationFilter, {
    nullable: true,
  })
  salariesDomiciliees?: SalarieListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SalarieListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SalarieListRelationFilter)
  @IsOptional()
  @Field(() => SalarieListRelationFilter, {
    nullable: true,
  })
  salarieesHebergees?: SalarieListRelationFilter;
}

export { AdresseWhereInput as AdresseWhereInput };
