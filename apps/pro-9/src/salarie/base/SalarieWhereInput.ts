/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { IdentiteWhereUniqueInput } from "../../identite/base/IdentiteWhereUniqueInput";
import { TelecomListRelationFilter } from "../../telecom/base/TelecomListRelationFilter";
import { AffectationListRelationFilter } from "../../affectation/base/AffectationListRelationFilter";
import { AdresseWhereUniqueInput } from "../../adresse/base/AdresseWhereUniqueInput";
import { FederationListRelationFilter } from "../../federation/base/FederationListRelationFilter";

@InputType()
class SalarieWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => IdentiteWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => IdentiteWhereUniqueInput)
  @IsOptional()
  @Field(() => IdentiteWhereUniqueInput, {
    nullable: true,
  })
  identite?: IdentiteWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TelecomListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TelecomListRelationFilter)
  @IsOptional()
  @Field(() => TelecomListRelationFilter, {
    nullable: true,
  })
  telecoms?: TelecomListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AffectationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AffectationListRelationFilter)
  @IsOptional()
  @Field(() => AffectationListRelationFilter, {
    nullable: true,
  })
  affectations?: AffectationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AdresseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AdresseWhereUniqueInput)
  @IsOptional()
  @Field(() => AdresseWhereUniqueInput, {
    nullable: true,
  })
  domiciliation?: AdresseWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => FederationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FederationListRelationFilter)
  @IsOptional()
  @Field(() => FederationListRelationFilter, {
    nullable: true,
  })
  federation?: FederationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AdresseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AdresseWhereUniqueInput)
  @IsOptional()
  @Field(() => AdresseWhereUniqueInput, {
    nullable: true,
  })
  demenagement?: AdresseWhereUniqueInput;
}

export { SalarieWhereInput as SalarieWhereInput };
