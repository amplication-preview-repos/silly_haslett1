/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsDate, ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { Identite } from "../../identite/base/Identite";
import { Telecom } from "../../telecom/base/Telecom";
import { Affectation } from "../../affectation/base/Affectation";
import { Adresse } from "../../adresse/base/Adresse";
import { Federation } from "../../federation/base/Federation";

@ObjectType()
class Salarie {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Identite,
  })
  @ValidateNested()
  @Type(() => Identite)
  @IsOptional()
  identite?: Identite | null;

  @ApiProperty({
    required: false,
    type: () => [Telecom],
  })
  @ValidateNested()
  @Type(() => Telecom)
  @IsOptional()
  telecoms?: Array<Telecom>;

  @ApiProperty({
    required: false,
    type: () => [Affectation],
  })
  @ValidateNested()
  @Type(() => Affectation)
  @IsOptional()
  affectations?: Array<Affectation>;

  @ApiProperty({
    required: true,
    type: () => Adresse,
  })
  @ValidateNested()
  @Type(() => Adresse)
  domiciliation?: Adresse;

  @ApiProperty({
    required: true,
    type: () => [Federation],
  })
  @ValidateNested()
  @Type(() => Federation)
  @IsOptional()
  federation?: Array<Federation>;

  @ApiProperty({
    required: false,
    type: () => Adresse,
  })
  @ValidateNested()
  @Type(() => Adresse)
  @IsOptional()
  demenagement?: Adresse | null;
}

export { Salarie as Salarie };
